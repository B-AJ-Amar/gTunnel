"use strict";(self.webpackChunkgtunnel_docs=self.webpackChunkgtunnel_docs||[]).push([[8458],{1577:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docker","title":"Docker Deployment","description":"Complete guide for deploying gTunnel using Docker and Docker Compose.","source":"@site/docs/docker.md","sourceDirName":".","slug":"/docker","permalink":"/gTunnel/docs/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/B-AJ-Amar/gTunnel/tree/main/docs/docs/docker.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"CLI Reference","permalink":"/gTunnel/docs/cli-reference"},"next":{"title":"Security & Authentication","permalink":"/gTunnel/docs/security"}}');var t=r(4848),i=r(8453);const l={sidebar_position:12},o="Docker Deployment",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Docker Images",id:"docker-images",level:2},{value:"Available Images",id:"available-images",level:3},{value:"Image Architecture",id:"image-architecture",level:3},{value:"Server Deployment",id:"server-deployment",level:2},{value:"Basic Server Container",id:"basic-server-container",level:3},{value:"Server with Configuration File",id:"server-with-configuration-file",level:3},{value:"Server with TLS",id:"server-with-tls",level:3},{value:"Client Deployment",id:"client-deployment",level:2},{value:"Basic Client Container",id:"basic-client-container",level:3},{value:"Client with Configuration",id:"client-with-configuration",level:3},{value:"Docker Compose",id:"docker-compose",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Development Environment",id:"development-environment",level:3},{value:"Production Stack",id:"production-stack",level:3},{value:"Multi-Service Application",id:"multi-service-application",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Server Environment Variables",id:"server-environment-variables",level:3},{value:"Client Environment Variables",id:"client-environment-variables",level:3},{value:"Docker Networking",id:"docker-networking",level:2},{value:"Host Network Mode",id:"host-network-mode",level:3},{value:"Custom Networks",id:"custom-networks",level:3},{value:"Service Discovery",id:"service-discovery",level:3},{value:"Persistent Storage",id:"persistent-storage",level:2},{value:"Configuration Persistence",id:"configuration-persistence",level:3},{value:"Certificate Management",id:"certificate-management",level:3},{value:"Health Checks",id:"health-checks",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"docker-deployment",children:"Docker Deployment"})}),"\n",(0,t.jsx)(n.p,{children:"Complete guide for deploying gTunnel using Docker and Docker Compose."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"gTunnel provides official Docker images for both client and server components, making deployment simple and consistent across different environments."}),"\n",(0,t.jsx)(n.h2,{id:"docker-images",children:"Docker Images"}),"\n",(0,t.jsx)(n.h3,{id:"available-images",children:"Available Images"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gtunnel/server:latest"})," - gTunnel server"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gtunnel/client:latest"})," - gTunnel client"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gtunnel/server:v1.0.0"})," - Specific version tags"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gtunnel/client:v1.0.0"})," - Specific version tags"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"image-architecture",children:"Image Architecture"}),"\n",(0,t.jsx)(n.p,{children:"Multi-architecture support:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"linux/amd64"}),"\n",(0,t.jsx)(n.li,{children:"linux/arm64"}),"\n",(0,t.jsx)(n.li,{children:"linux/arm/v7"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"server-deployment",children:"Server Deployment"}),"\n",(0,t.jsx)(n.h3,{id:"basic-server-container",children:"Basic Server Container"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run gTunnel server\ndocker run -d \\\n  --name gtunnel-server \\\n  -p 8080:8080 \\\n  -p 9090:9090 \\\n  -e GTUNNEL_DOMAIN=tunnel.example.com \\\n  -e GTUNNEL_AUTH_REQUIRED=true \\\n  -e GTUNNEL_AUTH_TOKENS=token1,token2 \\\n  gtunnel/server:latest\n"})}),"\n",(0,t.jsx)(n.h3,{id:"server-with-configuration-file",children:"Server with Configuration File"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create configuration directory\nmkdir -p ./config\n\n# Create server configuration\ncat > ./config/server.yml << EOF\nserver:\n  port: 8080\n  domain: "tunnel.example.com"\n  \nauth:\n  required: true\n  provider: "token"\n  tokens:\n    - "secure-token-1"\n    - "secure-token-2"\n\nlogging:\n  level: "info"\n  format: "json"\nEOF\n\n# Run with configuration\ndocker run -d \\\n  --name gtunnel-server \\\n  -p 8080:8080 \\\n  -v $(pwd)/config:/etc/gtunnel \\\n  gtunnel/server:latest\n'})}),"\n",(0,t.jsx)(n.h3,{id:"server-with-tls",children:"Server with TLS"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create certificate directory\nmkdir -p ./certs\n\n# Copy your certificates\ncp server.crt ./certs/\ncp server.key ./certs/\n\n# Run with TLS\ndocker run -d \\\n  --name gtunnel-server \\\n  -p 443:443 \\\n  -v $(pwd)/certs:/etc/ssl/certs \\\n  -v $(pwd)/config:/etc/gtunnel \\\n  -e GTUNNEL_TLS_ENABLED=true \\\n  -e GTUNNEL_TLS_CERT=/etc/ssl/certs/server.crt \\\n  -e GTUNNEL_TLS_KEY=/etc/ssl/certs/server.key \\\n  gtunnel/server:latest\n"})}),"\n",(0,t.jsx)(n.h2,{id:"client-deployment",children:"Client Deployment"}),"\n",(0,t.jsx)(n.h3,{id:"basic-client-container",children:"Basic Client Container"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run gTunnel client\ndocker run -d \\\n  --name gtunnel-client \\\n  -e GTUNNEL_SERVER_URL=wss://tunnel.example.com \\\n  -e GTUNNEL_AUTH_TOKEN=your-token \\\n  -e GTUNNEL_LOCAL_PORT=3000 \\\n  -e GTUNNEL_SUBDOMAIN=myapp \\\n  --network host \\\n  gtunnel/client:latest\n"})}),"\n",(0,t.jsx)(n.h3,{id:"client-with-configuration",children:"Client with Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create client configuration\ncat > ./config/client.yml << EOF\nserver:\n  url: "wss://tunnel.example.com"\n  auth_token: "your-secure-token"\n\ntunnels:\n  - name: "web-app"\n    local_port: 3000\n    subdomain: "myapp"\n    \n  - name: "api"\n    local_port: 8080\n    subdomain: "api"\n\nlogging:\n  level: "info"\n  format: "text"\nEOF\n\n# Run with configuration\ndocker run -d \\\n  --name gtunnel-client \\\n  -v $(pwd)/config:/etc/gtunnel \\\n  --network host \\\n  gtunnel/client:latest\n'})}),"\n",(0,t.jsx)(n.h2,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,t.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  gtunnel-server:\n    image: gtunnel/server:latest\n    ports:\n      - "8080:8080"\n      - "9090:9090"  # Metrics\n    environment:\n      - GTUNNEL_DOMAIN=tunnel.example.com\n      - GTUNNEL_AUTH_REQUIRED=true\n      - GTUNNEL_AUTH_TOKENS=token1,token2\n    volumes:\n      - ./logs:/var/log/gtunnel\n    restart: unless-stopped\n'})}),"\n",(0,t.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\n\nservices:\n  # Your application\n  app:\n    build: .\n    ports:\n      - "3000:3000"\n    environment:\n      - NODE_ENV=development\n    volumes:\n      - .:/app\n      - /app/node_modules\n    command: npm run dev\n    \n  # gTunnel client\n  gtunnel-client:\n    image: gtunnel/client:latest\n    depends_on:\n      - app\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_AUTH_TOKEN=${GTUNNEL_TOKEN}\n      - GTUNNEL_LOCAL_PORT=3000\n      - GTUNNEL_SUBDOMAIN=dev-${USER}\n    network_mode: "service:app"\n    restart: unless-stopped\n'})}),"\n",(0,t.jsx)(n.h3,{id:"production-stack",children:"Production Stack"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"version: '3.8'\n\nservices:\n  gtunnel-server:\n    image: gtunnel/server:latest\n    ports:\n      - \"443:443\"\n      - \"9090:9090\"\n    environment:\n      - GTUNNEL_DOMAIN=tunnel.mycompany.com\n      - GTUNNEL_TLS_ENABLED=true\n      - GTUNNEL_TLS_AUTO_CERT=true\n      - JWT_SECRET=${JWT_SECRET}\n      - DATABASE_URL=${DATABASE_URL}\n    volumes:\n      - ./config:/etc/gtunnel\n      - ./certs:/var/cache/gtunnel/certs\n      - ./logs:/var/log/gtunnel\n    restart: unless-stopped\n    \n  postgres:\n    image: postgres:15\n    environment:\n      - POSTGRES_DB=gtunnel\n      - POSTGRES_USER=gtunnel\n      - POSTGRES_PASSWORD=${DB_PASSWORD}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    restart: unless-stopped\n    \n  prometheus:\n    image: prom/prometheus:latest\n    ports:\n      - \"9091:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n    restart: unless-stopped\n    \n  grafana:\n    image: grafana/grafana:latest\n    ports:\n      - \"3001:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}\n    volumes:\n      - grafana_data:/var/lib/grafana\n    restart: unless-stopped\n\nvolumes:\n  postgres_data:\n  prometheus_data:\n  grafana_data:\n"})}),"\n",(0,t.jsx)(n.h3,{id:"multi-service-application",children:"Multi-Service Application"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\n\nservices:\n  # Frontend application\n  frontend:\n    build: ./frontend\n    ports:\n      - "3000:3000"\n    environment:\n      - REACT_APP_API_URL=https://api.myapp.tunnel.example.com\n    \n  # Backend API\n  backend:\n    build: ./backend\n    ports:\n      - "8080:8080"\n    environment:\n      - DATABASE_URL=postgres://user:pass@postgres:5432/myapp\n      - REDIS_URL=redis://redis:6379\n    depends_on:\n      - postgres\n      - redis\n      \n  # Database\n  postgres:\n    image: postgres:15\n    environment:\n      - POSTGRES_DB=myapp\n      - POSTGRES_USER=user\n      - POSTGRES_PASSWORD=pass\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      \n  # Cache\n  redis:\n    image: redis:7\n    \n  # gTunnel for frontend\n  gtunnel-frontend:\n    image: gtunnel/client:latest\n    depends_on:\n      - frontend\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_AUTH_TOKEN=${GTUNNEL_TOKEN}\n      - GTUNNEL_LOCAL_PORT=3000\n      - GTUNNEL_SUBDOMAIN=myapp\n    network_mode: "service:frontend"\n    \n  # gTunnel for backend\n  gtunnel-backend:\n    image: gtunnel/client:latest\n    depends_on:\n      - backend\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_AUTH_TOKEN=${GTUNNEL_TOKEN}\n      - GTUNNEL_LOCAL_PORT=8080\n      - GTUNNEL_SUBDOMAIN=api-myapp\n    network_mode: "service:backend"\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,t.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsx)(n.h3,{id:"server-environment-variables",children:"Server Environment Variables"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_PORT"})," - Server port (default: 8080)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_DOMAIN"})," - Server domain"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_BIND_ADDRESS"})," - Bind address (default: 0.0.0.0)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_TLS_ENABLED"})," - Enable TLS (true/false)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_TLS_CERT"})," - TLS certificate file path"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_TLS_KEY"})," - TLS private key file path"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_TLS_AUTO_CERT"})," - Enable Let's Encrypt auto-certificates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_AUTH_REQUIRED"})," - Require authentication (true/false)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_AUTH_TOKENS"})," - Comma-separated auth tokens"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"JWT_SECRET"})," - JWT secret key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DATABASE_URL"})," - Database connection string"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_LOG_LEVEL"})," - Log level (debug, info, warn, error)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"client-environment-variables",children:"Client Environment Variables"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_SERVER_URL"})," - Server WebSocket URL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_AUTH_TOKEN"})," - Authentication token"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_LOCAL_PORT"})," - Local port to tunnel"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_LOCAL_HOST"})," - Local host (default: localhost)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_SUBDOMAIN"})," - Requested subdomain"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_CUSTOM_DOMAIN"})," - Custom domain"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_INSECURE"})," - Skip TLS verification (true/false)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GTUNNEL_LOG_LEVEL"})," - Log level"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"docker-networking",children:"Docker Networking"}),"\n",(0,t.jsx)(n.h3,{id:"host-network-mode",children:"Host Network Mode"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  gtunnel-client:\n    image: gtunnel/client:latest\n    network_mode: "host"\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_LOCAL_PORT=3000\n'})}),"\n",(0,t.jsx)(n.h3,{id:"custom-networks",children:"Custom Networks"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"services:\n  app:\n    build: .\n    networks:\n      - app-network\n      \n  gtunnel-client:\n    image: gtunnel/client:latest\n    networks:\n      - app-network\n    environment:\n      - GTUNNEL_LOCAL_HOST=app\n      - GTUNNEL_LOCAL_PORT=3000\n\nnetworks:\n  app-network:\n    driver: bridge\n"})}),"\n",(0,t.jsx)(n.h3,{id:"service-discovery",children:"Service Discovery"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"services:\n  web:\n    image: nginx:alpine\n    \n  api:\n    build: ./api\n    \n  gtunnel-web:\n    image: gtunnel/client:latest\n    environment:\n      - GTUNNEL_LOCAL_HOST=web\n      - GTUNNEL_LOCAL_PORT=80\n      - GTUNNEL_SUBDOMAIN=web\n      \n  gtunnel-api:\n    image: gtunnel/client:latest\n    environment:\n      - GTUNNEL_LOCAL_HOST=api\n      - GTUNNEL_LOCAL_PORT=8080\n      - GTUNNEL_SUBDOMAIN=api\n"})}),"\n",(0,t.jsx)(n.h2,{id:"persistent-storage",children:"Persistent Storage"}),"\n",(0,t.jsx)(n.h3,{id:"configuration-persistence",children:"Configuration Persistence"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"services:\n  gtunnel-server:\n    image: gtunnel/server:latest\n    volumes:\n      - ./config:/etc/gtunnel:ro\n      - gtunnel_data:/var/lib/gtunnel\n      - ./logs:/var/log/gtunnel\n\nvolumes:\n  gtunnel_data:\n"})}),"\n",(0,t.jsx)(n.h3,{id:"certificate-management",children:"Certificate Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"services:\n  gtunnel-server:\n    image: gtunnel/server:latest\n    volumes:\n      - ./certs:/etc/ssl/certs:ro\n      - cert_cache:/var/cache/gtunnel/certs\n      \nvolumes:\n  cert_cache:\n"})}),"\n",(0,t.jsx)(n.h2,{id:"health-checks",children:"Health Checks"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  gtunnel-server:\n    image: gtunnel/server:latest\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n      \n  gtunnel-client:\n    image: gtunnel/client:latest\n    healthcheck:\n      test: ["CMD", "gtunnel-client", "status"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n'})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Container Won't Start:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check logs\ndocker logs gtunnel-server\ndocker logs gtunnel-client\n\n# Check configuration\ndocker exec gtunnel-server cat /etc/gtunnel/server.yml\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Network Connectivity:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Test from container\ndocker exec gtunnel-client ping tunnel.example.com\ndocker exec gtunnel-client nslookup tunnel.example.com\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Permission Issues:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Fix volume permissions\nsudo chown -R 1000:1000 ./config ./logs\n"})}),"\n",(0,t.jsx)(n.p,{children:"For more information, see:"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);