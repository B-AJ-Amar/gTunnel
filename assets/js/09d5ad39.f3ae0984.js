"use strict";(self.webpackChunkgtunnel_docs=self.webpackChunkgtunnel_docs||[]).push([[1864],{3973:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"examples","title":"Examples","description":"Common use cases and implementation examples for gTunnel.","source":"@site/docs/examples.md","sourceDirName":".","slug":"/examples","permalink":"/gTunnel/docs/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/B-AJ-Amar/gTunnel/tree/main/docs/docs/examples.md","tags":[],"version":"current","sidebarPosition":22,"frontMatter":{"sidebar_position":22},"sidebar":"tutorialSidebar","previous":{"title":"Frequently Asked Questions","permalink":"/gTunnel/docs/faq"},"next":{"title":"Troubleshooting","permalink":"/gTunnel/docs/troubleshooting"}}');var l=a(4848),s=a(8453);const i={sidebar_position:22},o="Examples",r={},c=[{value:"Basic Examples",id:"basic-examples",level:2},{value:"Local Development Server",id:"local-development-server",level:3},{value:"API Development",id:"api-development",level:3},{value:"Database Administration",id:"database-administration",level:3},{value:"Advanced Examples",id:"advanced-examples",level:2},{value:"Multi-Service Development Environment",id:"multi-service-development-environment",level:3},{value:"Custom Domain Setup",id:"custom-domain-setup",level:3},{value:"CI/CD Integration",id:"cicd-integration",level:3},{value:"Docker Examples",id:"docker-examples",level:2},{value:"Client in Docker",id:"client-in-docker",level:3},{value:"Complete Stack",id:"complete-stack",level:3},{value:"Kubernetes Examples",id:"kubernetes-examples",level:2},{value:"Basic Deployment",id:"basic-deployment",level:3},{value:"Sidecar Pattern",id:"sidecar-pattern",level:3},{value:"Server Examples",id:"server-examples",level:2},{value:"Basic Server Setup",id:"basic-server-setup",level:3},{value:"Production Server",id:"production-server",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Webhook Testing",id:"webhook-testing",level:3},{value:"API Testing",id:"api-testing",level:3},{value:"Mobile App Development",id:"mobile-app-development",level:3}];function m(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"examples",children:"Examples"})}),"\n",(0,l.jsx)(e.p,{children:"Common use cases and implementation examples for gTunnel."}),"\n",(0,l.jsx)(e.h2,{id:"basic-examples",children:"Basic Examples"}),"\n",(0,l.jsx)(e.h3,{id:"local-development-server",children:"Local Development Server"}),"\n",(0,l.jsx)(e.p,{children:"Expose a local development server to share with team members:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Client Configuration:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'server:\n  url: "wss://tunnel.example.com"\n  auth_token: "dev-token"\n\ntunnels:\n  - name: "dev-app"\n    local_port: 3000\n    subdomain: "myapp-dev"\n'})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Command Line:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"gtunnel-client connect --server wss://tunnel.example.com --port 3000 --subdomain myapp-dev\n"})}),"\n",(0,l.jsx)(e.h3,{id:"api-development",children:"API Development"}),"\n",(0,l.jsx)(e.p,{children:"Expose a local API for webhook testing:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'server:\n  url: "wss://tunnel.example.com"\n  auth_token: "api-token"\n\ntunnels:\n  - name: "webhook-api"\n    local_port: 8080\n    subdomain: "webhooks"\n    auth:\n      basic:\n        username: "api"\n        password: "secure-password"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"database-administration",children:"Database Administration"}),"\n",(0,l.jsx)(e.p,{children:"Securely expose database admin tools:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'tunnels:\n  - name: "db-admin"\n    local_port: 5432\n    subdomain: "dbadmin"\n    auth:\n      basic:\n        username: "admin"\n        password: "admin-password"\n'})}),"\n",(0,l.jsx)(e.h2,{id:"advanced-examples",children:"Advanced Examples"}),"\n",(0,l.jsx)(e.h3,{id:"multi-service-development-environment",children:"Multi-Service Development Environment"}),"\n",(0,l.jsx)(e.p,{children:"Expose multiple services for a microservices architecture:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'server:\n  url: "wss://tunnel.example.com"\n  auth_token: "microservices-token"\n\ntunnels:\n  - name: "frontend"\n    local_port: 3000\n    subdomain: "app"\n    \n  - name: "user-service"\n    local_port: 8001\n    subdomain: "users"\n    \n  - name: "payment-service"\n    local_port: 8002\n    subdomain: "payments"\n    \n  - name: "notification-service"\n    local_port: 8003\n    subdomain: "notifications"\n\nlogging:\n  level: "debug"\n  format: "json"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"custom-domain-setup",children:"Custom Domain Setup"}),"\n",(0,l.jsx)(e.p,{children:"Use your own domain with gTunnel:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'server:\n  url: "wss://tunnel.mycompany.com"\n  auth_token: "company-token"\n\ntunnels:\n  - name: "production-app"\n    local_port: 8080\n    custom_domain: "app.mycompany.com"\n    \n  - name: "staging-app"\n    local_port: 3000\n    custom_domain: "staging.mycompany.com"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"cicd-integration",children:"CI/CD Integration"}),"\n",(0,l.jsx)(e.p,{children:"Integrate gTunnel with CI/CD pipelines:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"GitHub Actions Example:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'name: Test with gTunnel\non: [push, pull_request]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      \n      - name: Start application\n        run: |\n          npm install\n          npm start &\n          sleep 10\n          \n      - name: Setup gTunnel\n        run: |\n          curl -L https://github.com/B-AJ-Amar/gTunnel/releases/latest/download/gtunnel-client-linux.tar.gz | tar xz\n          ./gtunnel-client connect \\\n            --server wss://ci-tunnel.example.com \\\n            --auth-token ${{ secrets.GTUNNEL_TOKEN }} \\\n            --port 3000 \\\n            --subdomain pr-${{ github.event.number }} &\n          \n      - name: Run E2E tests\n        run: |\n          export TEST_URL="https://pr-${{ github.event.number }}.ci-tunnel.example.com"\n          npm run test:e2e\n'})}),"\n",(0,l.jsx)(e.h2,{id:"docker-examples",children:"Docker Examples"}),"\n",(0,l.jsx)(e.h3,{id:"client-in-docker",children:"Client in Docker"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Dockerfile:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-dockerfile",children:'FROM alpine:latest\n\nRUN apk add --no-cache curl\n\n# Download gTunnel client\nRUN curl -L https://github.com/B-AJ-Amar/gTunnel/releases/latest/download/gtunnel-client-linux.tar.gz \\\n    | tar xz -C /usr/local/bin/\n\nCOPY config.yml /etc/gtunnel/config.yml\n\nEXPOSE 3000\n\nCMD ["gtunnel-client", "--config", "/etc/gtunnel/config.yml", "connect"]\n'})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Docker Compose:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'version: \'3.8\'\n\nservices:\n  app:\n    build: .\n    ports:\n      - "3000:3000"\n    environment:\n      - NODE_ENV=development\n      \n  gtunnel:\n    image: gtunnel/client:latest\n    depends_on:\n      - app\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_AUTH_TOKEN=${GTUNNEL_TOKEN}\n      - GTUNNEL_LOCAL_PORT=3000\n      - GTUNNEL_SUBDOMAIN=myapp\n    network_mode: "service:app"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"complete-stack",children:"Complete Stack"}),"\n",(0,l.jsx)(e.p,{children:"Full development environment with gTunnel:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'version: \'3.8\'\n\nservices:\n  database:\n    image: postgres:15\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: dev\n      POSTGRES_PASSWORD: dev\n    ports:\n      - "5432:5432"\n      \n  redis:\n    image: redis:7\n    ports:\n      - "6379:6379"\n      \n  backend:\n    build: ./backend\n    depends_on:\n      - database\n      - redis\n    ports:\n      - "8080:8080"\n    environment:\n      - DATABASE_URL=postgres://dev:dev@database:5432/myapp\n      - REDIS_URL=redis://redis:6379\n      \n  frontend:\n    build: ./frontend\n    ports:\n      - "3000:3000"\n    environment:\n      - REACT_APP_API_URL=https://api.myapp.tunnel.example.com\n      \n  gtunnel-api:\n    image: gtunnel/client:latest\n    depends_on:\n      - backend\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_AUTH_TOKEN=${GTUNNEL_TOKEN}\n      - GTUNNEL_LOCAL_PORT=8080\n      - GTUNNEL_SUBDOMAIN=api-myapp\n    network_mode: "service:backend"\n    \n  gtunnel-frontend:\n    image: gtunnel/client:latest\n    depends_on:\n      - frontend\n    environment:\n      - GTUNNEL_SERVER_URL=wss://tunnel.example.com\n      - GTUNNEL_AUTH_TOKEN=${GTUNNEL_TOKEN}\n      - GTUNNEL_LOCAL_PORT=3000\n      - GTUNNEL_SUBDOMAIN=myapp\n    network_mode: "service:frontend"\n'})}),"\n",(0,l.jsx)(e.h2,{id:"kubernetes-examples",children:"Kubernetes Examples"}),"\n",(0,l.jsx)(e.h3,{id:"basic-deployment",children:"Basic Deployment"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: gtunnel-client\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: gtunnel-client\n  template:\n    metadata:\n      labels:\n        app: gtunnel-client\n    spec:\n      containers:\n      - name: app\n        image: myapp:latest\n        ports:\n        - containerPort: 8080\n        \n      - name: gtunnel\n        image: gtunnel/client:latest\n        env:\n        - name: GTUNNEL_SERVER_URL\n          value: "wss://tunnel.example.com"\n        - name: GTUNNEL_AUTH_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: gtunnel-secret\n              key: auth-token\n        - name: GTUNNEL_LOCAL_PORT\n          value: "8080"\n        - name: GTUNNEL_SUBDOMAIN\n          value: "k8s-app"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"sidecar-pattern",children:"Sidecar Pattern"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app-with-tunnel\nspec:\n  template:\n    spec:\n      containers:\n      - name: main-app\n        image: myapp:latest\n        ports:\n        - containerPort: 8080\n        \n      - name: gtunnel-sidecar\n        image: gtunnel/client:latest\n        env:\n        - name: GTUNNEL_CONFIG\n          valueFrom:\n            configMapKeyRef:\n              name: gtunnel-config\n              key: config.yaml\n        volumeMounts:\n        - name: gtunnel-config\n          mountPath: /etc/gtunnel\n          \n      volumes:\n      - name: gtunnel-config\n        configMap:\n          name: gtunnel-config\n"})}),"\n",(0,l.jsx)(e.h2,{id:"server-examples",children:"Server Examples"}),"\n",(0,l.jsx)(e.h3,{id:"basic-server-setup",children:"Basic Server Setup"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'server:\n  port: 8080\n  domain: "tunnel.example.com"\n  \nauth:\n  required: true\n  provider: "token"\n  tokens:\n    - "dev-team-token"\n    - "ci-cd-token"\n    - "staging-token"\n\nsubdomains:\n  enabled: true\n  wildcard_domain: "*.tunnel.example.com"\n  reserved:\n    - "www"\n    - "api"\n    - "admin"\n\nlogging:\n  level: "info"\n  format: "json"\n  file: "/var/log/gtunnel/server.log"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"production-server",children:"Production Server"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'server:\n  port: 443\n  domain: "tunnel.mycompany.com"\n  tls:\n    enabled: true\n    auto_cert: true\n    cache_dir: "/var/cache/gtunnel/certs"\n\nauth:\n  required: true\n  provider: "jwt"\n  jwt:\n    secret: "${JWT_SECRET}"\n    issuer: "gtunnel-prod"\n    audience: "company-clients"\n    expiration: "24h"\n\nlimits:\n  max_connections: 5000\n  max_tunnels_per_client: 20\n  rate_limit:\n    requests_per_minute: 1000\n    burst: 100\n\ndatabase:\n  type: "postgres"\n  connection: "${DATABASE_URL}"\n  max_connections: 50\n\nmonitoring:\n  enabled: true\n  metrics_port: 9090\n  health_check_path: "/health"\n\nlogging:\n  level: "info"\n  format: "json"\n  file: "/var/log/gtunnel/server.log"\n  access_log: "/var/log/gtunnel/access.log"\n  rotate:\n    enabled: true\n    max_size: "100MB"\n    max_files: 30\n'})}),"\n",(0,l.jsx)(e.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,l.jsx)(e.h3,{id:"webhook-testing",children:"Webhook Testing"}),"\n",(0,l.jsx)(e.p,{children:"Test webhooks locally during development:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"# Start your webhook handler\nnode webhook-handler.js &\n\n# Expose it via gTunnel\ngtunnel-client connect \\\n  --server wss://tunnel.example.com \\\n  --port 3000 \\\n  --subdomain webhooks\n\n# Configure webhook URL in external service\n# https://webhooks.tunnel.example.com/webhook\n"})}),"\n",(0,l.jsx)(e.h3,{id:"api-testing",children:"API Testing"}),"\n",(0,l.jsx)(e.p,{children:"Test API integrations with external services:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# config.yml\nserver:\n  url: "wss://tunnel.example.com"\n  auth_token: "api-testing-token"\n\ntunnels:\n  - name: "api-server"\n    local_port: 8080\n    subdomain: "api-test"\n    headers:\n      X-Forwarded-Proto: "https"\n      X-Custom-Header: "api-test"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"mobile-app-development",children:"Mobile App Development"}),"\n",(0,l.jsx)(e.p,{children:"Test mobile apps against local backends:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"# Start local backend\nnpm run dev &\n\n# Expose via gTunnel\ngtunnel-client connect \\\n  --server wss://tunnel.example.com \\\n  --port 3000 \\\n  --subdomain mobile-backend\n\n# Configure mobile app to use:\n# https://mobile-backend.tunnel.example.com\n"})}),"\n",(0,l.jsx)(e.p,{children:"For more examples and use cases, see:"})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(m,{...n})}):m(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>i,x:()=>o});var t=a(6540);const l={},s=t.createContext(l);function i(n){const e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);