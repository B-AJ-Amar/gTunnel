FROM golang:1.23-alpine AS builder

WORKDIR /app

# Install git and make (needed for go modules and Makefile)
RUN apk add --no-cache git make

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the server binary using Makefile
RUN make build

# Final stage
FROM alpine:latest

# Install ca-certificates and curl for HTTPS connections and health checks
RUN apk --no-cache add ca-certificates curl

# Create a non-root user first
RUN adduser -D -s /bin/sh gtunnel

# Set working directory to gtunnel user's home
WORKDIR /home/gtunnel

# Copy both binaries from builder stage with correct ownership
COPY --from=builder --chown=gtunnel:gtunnel /app/build/gts ./gtunnel-server
COPY --from=builder --chown=gtunnel:gtunnel /app/build/gts ./gts
COPY --from=builder --chown=gtunnel:gtunnel /app/build/gtc ./gtunnel-client
COPY --from=builder --chown=gtunnel:gtunnel /app/build/gtc ./gtc

# Expose port (will be overridden by environment variables)
EXPOSE 7205

USER gtunnel

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${GTUNNEL_PORT:-7205}/___gTl___/health || exit 1

# Set the server command directly as entrypoint
ENTRYPOINT ["sh", "-c", "exec ./gtunnel-server start --bind-address \"0.0.0.0:${GTUNNEL_PORT:-7205}\""]
